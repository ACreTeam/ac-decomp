extern Gfx obj_e_turi_l_modelT[];
extern Gfx obj_e_turi_r_modelT[];

static void aTUR_actor_draw(ACTOR* actorx, GAME* game) {
    static Gfx* model[] = { obj_e_turi_l_modelT, obj_e_turi_r_modelT };
    static bIT_ShadowData_c* shadow[] = { &aTUR_shadow_data_l, &aTUR_shadow_data_r };
    GRAPH* graph = game->graph;
    TURI_ACTOR* turi = (TURI_ACTOR*)actorx;
    u16* pal_p = CLIP(structure_clip)->get_pal_segment_proc(turi->structure_class.structure_pal);
    Mtx* mtx = _Matrix_to_Mtx_new(graph);

    if (mtx != NULL) {
        _texture_z_light_fog_prim_npc(graph);
        OPEN_POLY_OPA_DISP(graph);

        gSPSegment(POLY_OPA_DISP++, ANIME_1_TXT_SEG, pal_p);
        gSPMatrix(POLY_OPA_DISP++, mtx, G_MTX_NOPUSH | G_MTX_LOAD | G_MTX_MODELVIEW);
        gSPDisplayList(POLY_OPA_DISP++, model[turi->structure_class.arg0 & 1]);

        CLOSE_POLY_OPA_DISP(graph);

        CLIP(bg_item_clip)->draw_shadow_proc(game, shadow[turi->structure_class.arg0], FALSE);
    }
}
