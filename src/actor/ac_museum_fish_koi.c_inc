
void mfish_koi_tail_anim_set(MUSEUM_FISH_PRIVATE_DATA* actor, s32 r4) {
    f32 temp;
    f32 temp2;
    f32 temp3;
    if (r4 == 0) {
        actor->_640 = RANDOM_RANGE(25, 31);
        actor->_5AC.x = RANDOM2F_RANGE(6.5f, 6.5f);
    } else if (r4 == 1) {
        if (actor->_640 == 0) {
            actor->_640 = RANDOM_RANGE(20, 24);
            actor->_5AC.x = RANDOM2F_RANGE(5.0f, 5.0f);
        }
    } else {
        if (actor->_640 == 0) {
            actor->_640 = RANDOM_RANGE(45, 51);
            actor->_5AC.x = RANDOM2F_RANGE(1.0f, 1.0f);
        }
    }
}

void mfish_koi_move_smooth() {
    return;
}

void mfish_koi_ct(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* gamex) {
    GAME_PLAY* game = (GAME_PLAY*)gamex;

    mfish_onefish_ct(actor, gamex);
    mfish_base_ct(actor, gamex);

    actor->_34 = mfish_koi_normal_process;
    actor->_5E8 = actor->init_data._10;
    actor->_5AC.z = 1.0f;
    actor->_624 = 9;
}

void mfish_koi_dummy_process_init() {
    return;
}

void mfish_koi_dummy_process() {
    return;
}

void mfish_koi_normal_process_init() {
    return;
}

void mfish_koi_normal_process() {
    return;
}

void mfish_koi_turn_process_init() {
    return;
}

void mfish_koi_turn_process() {
    return;
}

void mfish_koi_peck_process_init() {
    return;
}

void mfish_koi_peck_process() {
    return;
}

void mfish_koi_long_move_process_init(MUSEUM_FISH_PRIVATE_DATA* actor) {
    return;
}

void mfish_koi_long_move_process() {
    return;
}

void mfish_koi_base_FishMove() {
    return;
}

void mfish_koi_base_mv(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* gamex) {

    GAME_PLAY* game = (GAME_PLAY*)gamex;
    return;
}

void mfish_koi_mv(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* gamex) {

    GAME_PLAY* game = (GAME_PLAY*)gamex;
    return;
}

void mfish_koi_before_disp(GAME* game, cKF_SkeletonInfo_R_c* keyframe, int joint_num, Gfx** joint_m, u8* joint_f,
                           void* arg, s_xyz* joint1, xyz_t* trans) {
    return;
}

void mfish_koi_dw(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* gamex) {

    GAME_PLAY* game = (GAME_PLAY*)gamex;
    return;
}
