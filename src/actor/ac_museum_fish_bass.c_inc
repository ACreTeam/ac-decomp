
void mfish_bass_tail_anim_set(MUSEUM_FISH_PRIVATE_DATA* actor, s32 r4) {
    if (r4 == 0) {
        actor->_640 = 0xf;
        actor->_5AC.z = 4;
    } else if (r4 == 1 && actor->_640 == 0) {
        actor->_640 = 0x14;
        actor->_5AC.z = 3;
    }
}

void mfish_bass_base_FishMove(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* game) {
    GAME_PLAY* play = (GAME_PLAY*)game;
    f32 t;
    xyz_t pos;
    add_calc2(&actor->_5E8, actor->_5AC.x, 1 - actor->init_data._18, 0.01f + 0.001f * GETREG(TAKREG, 20));
    actor->_5D0.x = actor->_5E8 * sin_s(actor->_60C.y);
    actor->_5D0.z = actor->_5E8 * cos_s(actor->_60C.y);

    add_calc(&actor->_5D0.y, MAX(ABS(actor->_5E8 * sin_s(actor->_60C.x)), 0.1f), 0.1f, 0.1f, 0.005f);
    t = add_calc(&actor->_5A0.y, actor->_5F4 + actor->init_data._0C, 0.1f, actor->_5D0.y, 0);
    if (fabsf(t) < 0.008f) {
        add_calc_short_angle2(&actor->_612.x, 0, CALC_EASE(0.03f), DEG2SHORT_ANGLE(1.0f + (0.5f * actor->_5AC.y)) >> 1,
                              9);
    }
    mfish_move_smooth(actor, game);
    mfish_get_flow_vec(&pos, actor, game);
    actor->_5A0.x += actor->_5D0.x + actor->_5DC.x;
    actor->_5A0.z += actor->_5D0.z + actor->_5DC.z;
    actor->_5A0.y = actor->_5A0.y + actor->_5DC.y;
    actor->_5A0.y = MAX(60, MIN(110, actor->_5A0.y));
}

void mfish_bass_dummy_process_init(MUSEUM_FISH_PRIVATE_DATA* actor) {
    actor->_634 = mfish_get_hide_camera_angle(actor);

    if ((actor->_62E & 0x1E) != 0) {
        // works with temp instead of cast
        if ((s16)(actor->_612.y - actor->_62C) > 0) {
            actor->_634 = actor->_62C + DEG2SHORT_ANGLE(90);
        } else {
            actor->_634 = actor->_62C - DEG2SHORT_ANGLE(90);
        }
    } else {
        add_calc_short_angle2(&actor->_634, actor->_612.y, CALC_EASE(0.5f), DEG2SHORT_ANGLE(22.5),
                              DEG2SHORT_ANGLE(0.5f));
    }

    actor->_5EC = 0.0f;
    actor->_34 = &mfish_bass_dummy_process;

    return;
}

void mfish_bass_dummy_process(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* game) {
    // no clue what's going on here
    add_calc_short_angle2(&actor->_612.y, actor->_634, CALC_EASE2(0.1f), DEG2SHORT_ANGLE(2.5f), DEG2SHORT_ANGLE(0.25f));
    actor->_622 = add_calc_short_angle2(&actor->_60C.y, actor->_612.y, CALC_EASE2(0.25f), DEG2SHORT_ANGLE(1.25f),
                                        DEG2SHORT_ANGLE(0.25f));
    add_calc_short_angle2(&actor->_618.z, actor->_622, CALC_EASE2(0.25f), DEG2SHORT_ANGLE(1.25f),
                          DEG2SHORT_ANGLE(0.25f));
}

void mfish_bass_normal_process_init(MUSEUM_FISH_PRIVATE_DATA* fishActor) {
    //! NOTE: wrong floats in this file, based on objdiff
    f32 ra;
    f32 t;
    f32 temp;

    ra = RANDOM_F(fishActor->init_data._14) + fishActor->init_data._10;
    t = (ra) / MAX(fishActor->init_data._14 + fishActor->init_data._10, 1);

    if (RANDOM_F(1.0f) > 0.25f && (fishActor->_62E & 0x200) == 0) {
        fishActor->_62E |= 0x200;
    } else {
        fishActor->_62E &= ~0x200;
    }

    if (ra > fishActor->_5E8) {
        f32 v2;
        fishActor->_5F0 = ra;
        fishActor->_5AC.x = 0.15f + Rnd_EX_fx(0.1f);
        mfish_bass_tail_anim_set(fishActor, 0);
    }

    fishActor->_5F4 = t * Rnd_EX_fx(10);
    temp = (fishActor->_5F4 + fishActor->init_data._0C - fishActor->_5A0.y);
    fishActor->_612.x = DEG2SHORT_ANGLE2(temp * -(2 * fishActor->_5AC.y + 10));

    fishActor->_612.x = CLAMP(fishActor->_612.x, DEG2SHORT_ANGLE(-50), DEG2SHORT_ANGLE(50));
    fishActor->_5D0.y = 0;

    if (RANDOM_F(1) > fishActor->init_data._1C) {
        int diff;

        fishActor->_612.y += (s16)Rnd_EX_fx(fishActor->init_data._30 * 2.0f);
        diff = fishActor->_612.y - fishActor->_60C.y;
        if (ABS((s16)diff) < DEG2SHORT_ANGLE(20)) {
            if ((s16)diff > 0) {
                fishActor->_612.y += DEG2SHORT_ANGLE(20);
            } else {
                fishActor->_612.y += DEG2SHORT_ANGLE(-20);
            }
        }

        if ((fishActor->_62E & 0x200) == 0) {
            fishActor->_632 = DEG2SHORT_ANGLE(t * 15 + 20);
        } else {
            fishActor->_632 = DEG2SHORT_ANGLE(t * 30 + 20);
        }
    } else {
        if ((s16)(fishActor->_612.y - fishActor->_60C.y) > 0) {
            fishActor->_612.y += DEG2SHORT_ANGLE(15);
        } else {
            fishActor->_612.y += DEG2SHORT_ANGLE(-15);
        }

        if ((fishActor->_62E & 0x200) == 0) {
            fishActor->_632 = DEG2SHORT_ANGLE(t * 10 + 30);
        } else {
            fishActor->_632 = DEG2SHORT_ANGLE((GETREG(TAKREG, 42) + 40.0f) * t + 30);
        }
    }
    if ((s16)(fishActor->_60C.y - fishActor->_612.y) > 0) {
        fishActor->_636 = DEG2SHORT_ANGLE(0);
    } else {
        fishActor->_636 = DEG2SHORT_ANGLE(-180);
    }

    fishActor->_62E &= ~0xC0;
    fishActor->_5EC = 0;
    fishActor->_34 = mfish_bass_normal_process;
}

void mfish_bass_normal_process(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* game) {
    //! NOTE: wrong floats in this file, based on objdiff
    if (((actor->_62E & 0x200) != 0 && actor->_632 > DEG2SHORT_ANGLE(20)) || actor->_640 > 0) {
        f32 v = (actor->_5AC.y * 0.03f + 0.02f);
        add_calc2(&actor->_5EC,
                  v + (actor->_5AC.y * 0.02f + 0.03f) * (float)((actor->_632 - DEG2SHORT_ANGLE(20)) / 364),
                  actor->_5AC.y * 0.04f + 0.01f, actor->_5AC.y * 0.02f + 0.01f);
        add_calc(&actor->_5E8, actor->_5F0, CALC_EASE(v), actor->_5EC * 0.5f, 0.025f);
    }
    if (actor->_62E & 0x200) {
        add_calc_short_angle2(&actor->_632, 0, CALC_EASE2(GETREG(TAKREG, 73) * 0.01f + 0.5f),
                              (s16)(DEG2SHORT_ANGLE(GETREG(TAKREG, 74) * 0.1f + 4.0f) >> 1) >> 1, 45);
        actor->_636 = actor->_636 + (s16)DEG2SHORT_ANGLE2(
                                        (3.0f * actor->_5E8) / (actor->init_data._14 + actor->init_data._10) + 9.0f);
    } else {
        add_calc_short_angle2(&actor->_632, 0, CALC_EASE2(0.5f), 227, 45);
        actor->_636 += DEG2SHORT_ANGLE(10);
    }
    actor->_622 = add_calc_short_angle2(&actor->_60C.y, actor->_612.y + (s16)(actor->_632 * sin_s(actor->_636)),
                                        CALC_EASE2(actor->_5AC.y * 0.25f + 0.25f),
                                        (s16)(DEG2SHORT_ANGLE(actor->_5AC.y * 15.0f + 10.0f) >> 1) >> 1, 22);
    add_calc_short_angle2(&actor->_618.z, actor->_622, CALC_EASE2(actor->_5AC.y * 0.25f + 0.25f),
                          (s16)(DEG2SHORT_ANGLE(actor->_5AC.y * 8.0f + 7.0f) >> 1) >> 1, 22);

    if (actor->_5E8 < 0.01f) {
        mfish_bass_dummy_process_init(actor);
    } else if (actor->_5E8 > 1.0f && actor->_62E & 0x1e) {
        if ((s16)(actor->_60C.y - actor->_62C) > 0) {
            actor->_612.y = actor->_62C + DEG2SHORT_ANGLE(112.5f);
        } else {
            actor->_612.y = actor->_62C - DEG2SHORT_ANGLE(112.5f);
        }
        actor->_632 = 0;
    }
}

void mfish_bass_turn_process_init(MUSEUM_FISH_PRIVATE_DATA* actor) {
    s16 a;
    s16 b;

    b = a = DEG2SHORT_ANGLE(45) + DEG2SHORT_ANGLE(RANDOM_F(75));
    actor->_618.y =
        DEG2SHORT_ANGLE((actor->_5AC.y * 4.0f + 4.0f) * (SHORT2DEG_ANGLE2(a) / 120.0f) + 2.0f + actor->_5AC.y);
    if (actor->_62E & 0x1e) {
        if ((s16)(actor->_60C.y - actor->_62C) < 0) {
            b = -a;
        }
    } else if (actor->_62E & 0xC0) {
        if (actor->_62E & 0x40) {
            b = ABS(a);
        } else {
            b = -ABS(a);
        }
    } else if (actor->_62E & 0x20) {
        if ((s16)(actor->_62A - actor->_60C.y) < 0) {
            b = -a;
        }
    }

    if (b > 0) {
        actor->_62E |= 0x40;
    } else {
        actor->_62E |= 0x80;
    }

    actor->_612.y += b;

    if ((RANDOM_F(1) < 0.25f) && (actor->_62E & 0x200) == 0) {
        actor->_62E |= 0x200;
    } else {
        actor->_62E &= ~0x200;
    }

    if ((actor->_62E & 0x200) == 0) {
        actor->_5F0 = 1.75f;
        actor->_5AC.x = Rnd_EX_fx(0.1f) + 0.15f;
    } else {
        actor->_5F0 = actor->init_data._10 + actor->init_data._14 * 0.7f;
        actor->_5AC.x = Rnd_EX_fx(0.1f) + 0.15f;
    }

    if (RANDOM_F(1) < 0.2f) {
        actor->_63E = RANDOMF_RANGE(1, 4);
    } else {
        actor->_63E = 0;
    }

    actor->_5EC = 0.0f;
    actor->_34 = mfish_bass_turn_process;
}

void mfish_bass_turn_process(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* game) {
    int a;
    f32 v0, v1, v2, v3, v4;
    v0 = actor->_5AC.y * 0.2f + 0.05f;
    v1 = actor->_5AC.y * 0.04f + 0.01f;
    v2 = actor->_5AC.y * 0.04f + 0.01f;
    v3 = actor->_5AC.y * 0.15f + 0.1f;
    v4 = actor->_5AC.y * 0.15f + 0.05f;

    if (ABS(actor->_622) > DEG2SHORT_ANGLE(20)) {
        add_calc2(&actor->_5EC, v0, v1, v2);
        add_calc(&actor->_5E8, actor->_5F0, CALC_EASE(0.1f), actor->_5EC * 0.5f, 0.05f);
    }

    add_calc2(&actor->_5F0, MAX(actor->init_data._10, 0.0f), v3, v4);
    add_calc_short_angle2(&actor->_632, 0, CALC_EASE2(0.5f), DEG2SHORT_ANGLE(2.5f), 45);

    actor->_622 = add_calc_short_angle2(&actor->_60C.y, ((s16)(sin_s(actor->_636) * actor->_632) + actor->_612.y),
                                        CALC_EASE(0.2f), actor->_618.y >> 1, 45);

    add_calc_short_angle2(&actor->_618.z, actor->_622, CALC_EASE2(0.25f), DEG2SHORT_ANGLE(2.5f), 22);

    if (ABS((s16)(actor->_60C.y - actor->_612.y)) < DEG2SHORT_ANGLE(2.0f) && actor->_5E8 < 0.1f) {
        if (actor->_63E > 0) {
            if (mfish_WallCheck(actor)) {
                mfish_bass_tail_anim_set(actor, 1);
                mfish_bass_turn_process_init(actor);

            } else {
                mfish_bass_normal_process_init(actor);
            }
            actor->_63E--;
        } else {
            mfish_bass_dummy_process_init(actor);
        }
    }
}

void mfish_bass_ct(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* gamex) {
    GAME_PLAY* game = (GAME_PLAY*)gamex;

    mfish_onefish_ct(actor, gamex);
    mfish_base_ct(actor, gamex);

    actor->_34 = mfish_bass_normal_process;

    if (actor->_59C == 7) {
        actor->_5AC.y = 0;
    } else if (actor->_59C == 6) {
        actor->_5AC.y = 0.5f;
    } else {
        actor->_5AC.y = 1;
    }

    actor->_624 = 0xb;

    return;
}

void mfish_bass_mv(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* gamex) {
    //! NOTE: wrong floats in this file, based on objdiff
    mfish_onefish_mv(actor, gamex);

    if (actor->_5F8 > actor->init_data._08 * 20.0f) {
        actor->_5F8 = 0.0f;
        actor->_626 = 0;
    }

    if (actor->_626-- <= 0) {
        actor->_626 = actor->init_data._2C + (s16)(RANDOM_F(actor->init_data._2E));
        actor->_628 = actor->_626;

        if (mfish_WallCheck(actor)) {
            mfish_bass_tail_anim_set(actor, 1);
            mfish_bass_turn_process_init(actor);
        } else {
            mfish_bass_tail_anim_set(actor, 0);
            mfish_bass_normal_process_init(actor);
        }
    } else if (actor->_34 == &mfish_bass_normal_process) {
        if (((actor->_62E & 0x1e) && ABS((s16)(actor->_62C - actor->_60C.y)) < DEG2SHORT_ANGLE(30)) ||
            ((actor->_62E & 0x20) &&
             ABS((s16)((actor->_62A - DEG2SHORT_ANGLE(-180)) - actor->_60C.y)) < DEG2SHORT_ANGLE(30))) {
            actor->_626 = actor->init_data._2C + (s16)RANDOM_F(actor->init_data._2E);
            actor->_628 = actor->_626;
            mfish_bass_tail_anim_set(actor, 1);
            mfish_bass_turn_process_init(actor);
        }
    }
    actor->_638 += DEG2SHORT_ANGLE(10);
    actor->_34(actor, gamex);

    if (ABS(actor->_618.z) > ABS(actor->_622)) {
        add_calc2(&actor->_5E8, MIN(GETREG(TAKREG, 19) * 0.1f + 1.0f, actor->_5E8), GETREG(TAKREG, 18) * 0.01f + 0.2f,
                  GETREG(TAKREG, 17) * 0.01f + 0.5f);
    }

    add_calc_short_angle2(&actor->_60C.x, actor->_612.x, CALC_EASE(0.05f), DEG2SHORT_ANGLE(actor->_5AC.y + 3.0f) >> 1,
                          9);
    add_calc_short_angle2(&actor->_612.x, 0, CALC_EASE(0.05f), DEG2SHORT_ANGLE(actor->_5AC.y * 0.5f + 2.0f) >> 1, 9);

    mfish_bass_base_FishMove(actor, gamex);
    Museum_Fish_BGCheck(actor, gamex);
    if (actor->_640 > 0) {
        f32 tmp, num, denom;
        // needed tmp before the decrement for some reason
        tmp = (0.4f + (0.7f * actor->_5AC.y));
        actor->_640--;
        add_calc2(&actor->_38._00.frame_control.speed,
                  tmp * (1.75f +
                         actor->_5AC.z * (actor->_5F0 - actor->_5E8) / ((actor->init_data._14) + actor->init_data._10)),
                  0.5f, 0.5f);
    } else {
        add_calc2(&actor->_38._00.frame_control.speed, (actor->_5E8 * 2.0f + 0.5f) * (actor->_5AC.y * 0.8f + 0.6f),
                  0.2f, 0.1f);
    }
}

void mfish_bass_dw(MUSEUM_FISH_PRIVATE_DATA* actor, GAME* gamex) {
    YET_SKELETON* skele;
    Mtx* mtx;
    GRAPH* graph;
    GAME_PLAY* play;

    play = (GAME_PLAY*)gamex;

    skele = &actor->_38;

    if (play->game.frame_counter % 2 != 0) {
        mtx = &skele->_70;
    } else {
        mtx = &skele->_2b0;
    }

    graph = play->game.graph;

    Matrix_translate(actor->_5A0.x, actor->_5A0.y, actor->_5A0.z, 0);
    Matrix_RotateY(actor->_60C.y, 1);

    Matrix_translate(0, 0.25f * actor->init_data._04, 1.5f * actor->init_data._24, 1);
    Matrix_RotateX(actor->_60C.x, 1);
    Matrix_RotateZ(MY_CLAMP(-(actor->_618.z >> 1), DEG2SHORT_ANGLE(-20), DEG2SHORT_ANGLE(20)), 1);
    Matrix_translate(0, 0.25f * -actor->init_data._04, 0.5f * -actor->init_data._24, 1);
    Matrix_scale(actor->init_data._00, actor->init_data._00, actor->init_data._00, 1);

    OPEN_DISP(graph);
    gSPMatrix(NEXT_POLY_OPA_DISP, _Matrix_to_Mtx_new(play->game.graph), G_MTX_NOPUSH | G_MTX_LOAD | G_MTX_MODELVIEW);
    CLOSE_DISP(graph);

    cKF_Si3_draw_R_SV(&play->game, &skele->_00, mtx, &mfish_before_disp, 0, actor);
    return;
}
