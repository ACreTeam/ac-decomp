typedef struct {
    int msg_no;
    aMJN4_TALK_PROC talk_proc;
} aMJN4_talk_data_c;

static void aMJN4_set_force_talk_info(ACTOR* actorx) {
    static aMJN4_talk_data_c dt_tbl[] = {
        { 0x250F, (aMJN4_TALK_PROC)none_proc1 },
        { 0x2512, (aMJN4_TALK_PROC)none_proc1 },
    };
    NPC_MAJIN4_ACTOR* actor = (NPC_MAJIN4_ACTOR*)actorx;
    aMJN4_talk_data_c* data_p = &dt_tbl[actor->talk_idx];

    mDemo_Set_msg_num(data_p->msg_no);
    mDemo_Set_talk_turn(TRUE);
    actor->talk_proc = data_p->talk_proc;
    mPlib_Set_able_hand_all_item_in_demo(TRUE);

    if (actor->talk_idx == aMJN4_TALK_END_WAIT) {
        mBGMPsComp_make_ps_quiet(0);
    }
}

static void aMJN4_force_talk_request(ACTOR* actorx, GAME* game) {
    mDemo_Request(mDemo_TYPE_SPEAK, actorx, aMJN4_set_force_talk_info);
}

static int aMJN4_talk_init2(ACTOR* actorx, GAME* game) {
    NPC_MAJIN4_ACTOR* actor = (NPC_MAJIN4_ACTOR*)actorx;

    actor->npc_class.talk_info.talk_request_proc = (aNPC_TALK_REQUEST_PROC)none_proc1;
    mDemo_Set_ListenAble();
    return TRUE;
}

static int aMJN4_talk_init(ACTOR* actorx, GAME* game) {
    NPC_MAJIN4_ACTOR* actor = (NPC_MAJIN4_ACTOR*)actorx;
    int ret = FALSE;

    if (actor->npc_class.draw.animation_id == aNPC_ANIM_APPEAR1 && actor->npc_class.draw.main_animation_state == cKF_STATE_STOPPED) {

        actor->npc_class.talk_info.default_turn_animation = aNPC_ANIM_WAIT_R1;
        actor->npc_class.talk_info.default_animation = aNPC_ANIM_WAIT_R1;
        actor->npc_class.talk_info.talk_init_proc = aMJN4_talk_init2;
        aMJN4_talk_init2(actorx, game);
        ret = TRUE;
    }
    
    return ret;
}

static int aMJN4_talk_end_chk(ACTOR* actorx, GAME* game) {
    NPC_MAJIN4_ACTOR* actor = (NPC_MAJIN4_ACTOR*)actorx;
    GAME_PLAY* play = (GAME_PLAY*)game;
    int ret = FALSE;

    actor->talk_proc(actor, play);
    if (mDemo_CAN_ACTOR_TALK(actorx)) {
        actor->npc_class.talk_info.melody_inst = 0;
        aMJN4_setup_think_proc(actor, play, actor->next_think_idx);
        ret = TRUE;
    }

    return ret;
}
