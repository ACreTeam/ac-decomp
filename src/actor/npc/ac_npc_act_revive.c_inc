static void aNPC_act_revive_main_proc(NPC_ACTOR* nactorx, GAME_PLAY* play) {
    if (!aNPC_act_anm_seq(nactorx)) {
        nactorx->action.step = aNPC_ACTION_END_STEP;
    }
}

static void aNPC_act_revive_init_proc(NPC_ACTOR* nactorx, GAME_PLAY* play) {
    u8 act = aNPC_ACTION_TYPE_DERU1;

    if (nactorx->right_hand.item_type == aNPC_ITEM_TYPE_UMBRELLA) {
        act = aNPC_ACTION_TYPE_DERU2;
    }

    CLIP(bg_item_clip)
        ->pit_exit_proc(*nactorx->condition_info.under_fg_p, nactorx->condition_info.ut_x, nactorx->condition_info.ut_z,
                        nactorx->actor_class.npc_id);
    nactorx->action.step = 0;
    nactorx->condition_info.demo_flg = aNPC_COND_DEMO_SKIP_UZAI_CHECK | aNPC_COND_DEMO_SKIP_ENTRANCE_CHECK |
                                       aNPC_COND_DEMO_SKIP_HEAD_LOOKAT | aNPC_COND_DEMO_SKIP_TALK_CHECK |
                                       aNPC_COND_DEMO_SKIP_ITEM | aNPC_COND_DEMO_SKIP_FORWARD_CHECK |
                                       aNPC_COND_DEMO_SKIP_BGCHECK | aNPC_COND_DEMO_SKIP_MOVE_Y |
                                       aNPC_COND_DEMO_SKIP_MOVE_CIRCLE_REV | aNPC_COND_DEMO_SKIP_MOVE_RANGE_CHECK;
    aNPC_setupAction(nactorx, act);
}

static void aNPC_act_revive_proc(NPC_ACTOR* nactorx, GAME_PLAY* play, int type) {
    static aNPC_SUB_PROC act_proc[] = {
        &aNPC_act_revive_init_proc,
        (aNPC_SUB_PROC)&none_proc1,
        &aNPC_act_revive_main_proc,
    };

    (*act_proc[type])(nactorx, play);
}
