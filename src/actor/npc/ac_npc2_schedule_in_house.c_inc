enum {
    aNPC_SCHEDULE_IN_HOUSE_STEP_HIDE,
    aNPC_SCHEDULE_IN_HOUSE_STEP_INTO_ROOM,
    aNPC_SCHEDULE_IN_HOUSE_STEP_WANDER,

    aNPC_SCHEDULE_IN_HOUSE_STEP_NUM
};

static void aNPC_in_house_schedule_think_init(NPC_ACTOR* nactorx, GAME_PLAY* play) {
    static int think_idx[] = { aNPC_THINK_HIDE, aNPC_THINK_INTO_ROOM, aNPC_THINK_WANDER };

    aNPC_think_init_proc(nactorx, play, think_idx[nactorx->schedule.step]);
}

static void aNPC_in_house_schedule_main_proc(NPC_ACTOR* nactorx, GAME_PLAY* play) {
    aNPC_think_main_proc(nactorx, play);

    if (nactorx->think.end_flag == TRUE) {
        nactorx->schedule.step++;
        aNPC_in_house_schedule_think_init(nactorx, play);
    } else {
        u8 type = (u32)nactorx->npc_info.schedule->current_type;
        
        if (nactorx->schedule.type != type) {
            if (type != mNPS_SCHED_SLEEP &&
                nactorx->condition_info.talk_condition == aNPC_TALK_TYPE_NONE) {
                aNPC_set_schedule(nactorx, play);
            }
        }
    }
}

static void aNPC_in_house_schedule_init_proc(NPC_ACTOR* nactorx, GAME_PLAY* play) {
    u8 step = aNPC_SCHEDULE_IN_HOUSE_STEP_WANDER;
    u8 hide = FALSE;

    if (!aNPC_GET_ANM(nactorx)->is_home && aNPC_IS_NRM_NPC(nactorx)) {
        step = aNPC_SCHEDULE_IN_HOUSE_STEP_HIDE;
        hide = TRUE;
        nactorx->actor_class.world.position.x = 0.0f;
        nactorx->actor_class.world.position.z = 0.0f;
    }

    aNPC_set_hide_flg(nactorx, hide);
    nactorx->schedule.step = step;
    aNPC_in_house_schedule_think_init(nactorx, play);
}

static void aNPC_in_house_schedule_proc(NPC_ACTOR* nactorx, GAME_PLAY* play, int proc_type) {
    static aNPC_SUB_PROC sche_proc[] = {
        &aNPC_in_house_schedule_init_proc,
        &aNPC_in_house_schedule_main_proc,
    };

    (*sche_proc[proc_type])(nactorx, play);
}
